name: Java CI/CD pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:    
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        java-package: 'jdk'  # JDK 패키지 설치
    - name: make application-dev.yml
      run: |
        cd ./src/main/resources
        touch ./application-dev.yml
        echo "${{ secrets.APPLICATION_DEV }}" > ./application-dev.yml
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle # Gradle 설정
      run: ./gradlew build
      
  # Docker 이미지 빌드 
    - name: Docker build & Push
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/back .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/back
  
   # AWS 자격증명 부분 추가
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      id: deploy
      env:
        APP: "back"
        COMPOSE: "/home/capo_project/docker-compose.yml"
      with:
        host: ${{ secrets.EC2_HOST }} # EC2_HOST 키
        username: ubuntu
        key: ${{ secrets.EC2_PRIVATE_KEY }} # PRIVATE_KEY
        port: 22
        envs: COMPOSE
        script: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/back
          sudo docker-compose -f /home/capo_project/docker-compose.yml up -d
